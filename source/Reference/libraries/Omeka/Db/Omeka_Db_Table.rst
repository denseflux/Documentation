--------------
Omeka_Db_Table
--------------

.. php:namespace:

.. php:class:: Omeka_Db_Table

    Database table classes.

    Subclasses attached to models must follow the naming convention:
    Table_TableName, e.g. Table_ElementSet in models/Table/ElementSet.php.

    .. php:attr:: _target

        protected string

        The name of the model for which this table will retrieve objects.

    .. php:attr:: _name

        protected string

        The name of the table (sans prefix).

        If this is not given, it will be inflected.

    .. php:attr:: _tablePrefix

        protected string

        The table prefix.

        Generally used to differentiate Omeka installations sharing a database.

    .. php:attr:: _db

        protected Omeka_Db

        The Omeka database object.

    .. php:method:: __construct($targetModel, $db)

        Construct the database table object.

        Do not instantiate this by itself. Access instances only via
        Omeka_Db::getTable().

        :type $targetModel: string
        :param $targetModel: Class name of the table's model.
        :type $db: Omeka_Db
        :param $db: Database object to use for queries.

    .. php:method:: __call($m, $a)

        Delegate to the database adapter.

        Used primarily as a convenience method. For example, you can call
        fetchOne() and fetchAll() directly from this object.

        :type $m: string
        :param $m: Method name.
        :type $a: array
        :param $a: Method arguments.
        :returns: mixed

    .. php:method:: getTableAlias()

        Retrieve the alias for this table (the name without the prefix).

        :returns: string

    .. php:method:: getDb()

        Retrieve the Omeka_Db instance.

        :returns: Omeka_Db

    .. php:method:: hasColumn($field)

        Determine whether a model has a given column.

        :type $field: string
        :param $field: Field name.
        :returns: bool

    .. php:method:: getColumns()

        Retrieve a list of all the columns for a given model.

        This should be here and not in the model class because get_class_vars()
        returns private/protected properties when called from within the class.
        Will only return public properties when called in this fashion.

        :returns: array

    .. php:method:: getTableName()

        Retrieve the name of the table for the current table (used in SQL
        statements).

        If the table name has not been set, it will inflect the table name.

        :returns: string

    .. php:method:: setTableName($name = null)

        Set the name of the database table accessed by this class.

        If no name is provided, it will inflect the table name from the name of
        the model defined in the constructor. For example, Item -> items.

        :type $name: string
        :param $name: (optional) Table name.
        :returns: void

    .. php:method:: getTablePrefix()

        Retrieve the table prefix for this table instance.

        :returns: string

    .. php:method:: setTablePrefix($tablePrefix = null)

        Set the table prefix.

        Defaults to the table prefix defined by the Omeka_Db instance. This should
        remain the default in most cases. However, edge cases may require
        customization, e.g. creating wrappers for tables generated by other
        applications.

        :type $tablePrefix: string|null
        :param $tablePrefix:

    .. php:method:: find($id)

        Retrieve a single record given an ID.

        :type $id: integer
        :param $id:
        :returns: Omeka_Record_AbstractRecord|false

    .. php:method:: findAll()

        Get a set of objects corresponding to all the rows in the table

        WARNING: This will be memory intensive and is thus not recommended for
        large data sets.

        :returns: array Array of {@link Omeka_Record_AbstractRecord}s.

    .. php:method:: findPairsForSelectForm($options = array())

        Retrieve an array of key=>value pairs that can be used as options in a
        <select> form input.

        :type $options: array
        :param $options: (optional) Set of parameters for searching/ filtering results.
        :returns: array

    .. php:method:: _getColumnPairs()

        Retrieve the array of columns that are used by findPairsForSelectForm().

        This is a template method because these columns are different for every
        table, but the underlying logic that retrieves the pairs from the database
        is the same in every instance.

        :returns: array

    .. php:method:: findBy($params = array(), $limit = null, $page = null)

        Retrieve a set of model objects based on a given number of parameters

        :type $params: array
        :param $params: A set of parameters by which to filter the objects that get returned from the database.
        :type $limit: integer
        :param $limit: Number of objects to return per "page".
        :type $page: integer
        :param $page: Page to retrieve.
        :returns: array|null The set of objects that is returned

    .. php:method:: getSelect()

        Retrieve a select object for this table.

        :returns: Omeka_Db_Select

    .. php:method:: getSelectForFindBy($params = array())

        Retrieve a select object that has had search filters applied to it.

        :type $params: array
        :param $params: optional Set of named search parameters.
        :returns: Omeka_Db_Select

    .. php:method:: getSelectForFind($recordId)

        Retrieve a select object that is used for retrieving a single record from
        the database.

        :type $recordId: integer
        :param $recordId:
        :returns: Omeka_Db_Select

    .. php:method:: applySearchFilters($select, $params)

        Apply a set of filters to a Select object based on the parameters given.

        By default, this simply checks the params for keys corresponding to
        database column names. For more complex filtering (e.g., when other tables
        are involved),
        or to use keys other than column names, override this method and
        optionally call this parent method.

        :type $select: Omeka_Db_Select
        :param $select:
        :type $params: array
        :param $params:

    .. php:method:: applySorting($select, $sortField, $sortDir)

        Apply default column-based sorting for a table.

        :type $select: Omeka_Db_Select
        :param $select:
        :type $sortField: string
        :param $sortField: Field to sort on.
        :type $sortDir: string
        :param $sortDir: Direction to sort.

    .. php:method:: applyPagination($select, $limit, $page = null)

        Apply pagination to a select object via the LIMIT and OFFSET clauses.

        :type $select: Zend_Db_Select
        :param $select:
        :type $limit: integer
        :param $limit: Number of results per "page".
        :type $page: integer|null
        :param $page: Page to retrieve, first if omitted.
        :returns: Zend_Db_Select

    .. php:method:: findBySql($sqlWhereClause, $params = array(), $findOne = false)

        Retrieve an object or set of objects based on an SQL WHERE predicate.

        :type $sqlWhereClause: string
        :param $sqlWhereClause:
        :type $params: array
        :param $params: optional Set of parameters to bind to the WHERE clause. Used to prevent security flaws.
        :type $findOne: boolean
        :param $findOne: optional Whether or not to retrieve a single record or the whole set (retrieve all by default).
        :returns: array|Omeka_Record_AbstractRecord|false

    .. php:method:: count($params = array())

        Retrieve a count of all the rows in the table.

        :type $params: array
        :param $params: optional Set of search filters upon which to base the count.
        :returns: integer

    .. php:method:: exists($id)

        Check whether a row exists in the table.

        :type $id: int
        :param $id:
        :returns: bool

    .. php:method:: filterByPublic(Omeka_Db_Select $select, $isPublic)

        Apply a public/not public filter to the select object.

        A convenience function than derivative table classes may use while
        applying search filters.

        :type $select: Omeka_Db_Select
        :param $select:
        :type $isPublic: bool
        :param $isPublic:

    .. php:method:: filterByFeatured(Omeka_Db_Select $select, $isFeatured)

        Apply a featured/not featured filter to the select object.

        A convenience function than derivative table classes may use while
        applying search filters.

        :type $select: Omeka_Db_Select
        :param $select:
        :type $isFeatured: bool
        :param $isFeatured:

    .. php:method:: filterBySince(Omeka_Db_Select $select, $dateSince, $dateField)

        Apply a date since filter to the select object.

        A convenience function than derivative table classes may use while
        applying search filters.

        :type $select: Omeka_Db_Select
        :param $select:
        :type $dateSince: string
        :param $dateSince: ISO 8601 formatted date
        :type $dateField: string
        :param $dateField: "added" or "modified"

    .. php:method:: filterByUser(Omeka_Db_Select $select, $userId, $userField)

        Apply a user filter to the select object.

        A convenience function than derivative table classes may use while
        applying search filters.

        :type $select: Omeka_Db_Select
        :param $select:
        :type $userId: int
        :param $userId:
        :param $userField:

    .. php:method:: filterByRange($select, $range)

        Filter returned records by ID.

        Can specify a range of valid record IDs or an individual ID

        :type $select: Omeka_Db_Select
        :param $select:
        :type $range: string
        :param $range: Example: 1-4, 75, 89
        :returns: void

    .. php:method:: getSelectForCount($params = array())

        Retrieve a select object used to retrieve a count of all the table rows.

        :type $params: array
        :param $params: optional Set of search filters.
        :returns: Omeka_Db_Select

    .. php:method:: checkExists($id)

        Check whether a given row exists in the database.

        Currently used to verify that a row exists even though the current user
        may not have permissions to access it.

        :type $id: int
        :param $id: The ID of the row.
        :returns: boolean

    .. php:method:: fetchObjects($sql, $params = array())

        Retrieve a set of record objects based on an SQL SELECT statement.

        :type $sql: string
        :param $sql: This could be either a string or any object that can be cast to a string (commonly Omeka_Db_Select).
        :type $params: array
        :param $params: Set of parameters to bind to the SQL statement.
        :returns: array|null Set of Omeka_Record_AbstractRecord instances, or null if none can be found.

    .. php:method:: fetchObject($sql, $params = array())

        Retrieve a single record object from the database.

        :type $sql: string
        :param $sql:
        :type $params: string
        :param $params: Parameters to substitute into SQL query.
        :returns: Omeka_Record_AbstractRecord or null if no record

    .. php:method:: recordFromData($data)

        Populate a record object with data retrieved from the database.

        :type $data: array
        :param $data: A keyed array representing a row from the database.
        :returns: Omeka_Record_AbstractRecord

    .. php:method:: _getSortParams($params)

        Get and parse sorting parameters to pass to applySorting.

        A sorting direction of 'ASC' will be used if no direction parameter is
        passed.

        :type $params: array
        :param $params:
        :returns: array|null Array of sort field, sort dir if params exist, null otherwise.

    .. php:method:: _getHookName($suffix)

        Get the name for a model-specific hook or filter..

        :type $suffix: string
        :param $suffix: The hook-specific part of the hook name.
        :returns: string
